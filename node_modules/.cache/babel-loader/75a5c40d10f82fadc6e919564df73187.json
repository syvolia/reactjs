{"ast":null,"code":"import _classCallCheck from \"/home/syvolia/Documents/reactthreejs/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/syvolia/Documents/reactthreejs/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/syvolia/Documents/reactthreejs/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/syvolia/Documents/reactthreejs/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/syvolia/Documents/reactthreejs/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/syvolia/Documents/reactthreejs/src/ThreeScene.js\";\nimport React, { Component } from \"react\";\nimport * as THREE from \"three\";\nimport { MTLLoader, OBJLoader } from \"three-obj-mtl-loader\";\nimport OrbitControls from \"three-orbitcontrols\";\n\nvar ThreeScene = /*#__PURE__*/function (_Component) {\n  _inherits(ThreeScene, _Component);\n\n  function ThreeScene() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ThreeScene);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ThreeScene)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.start = function () {\n      if (!_this.frameId) {\n        _this.frameId = requestAnimationFrame(_this.animate);\n      }\n    };\n\n    _this.stop = function () {\n      cancelAnimationFrame(_this.frameId);\n    };\n\n    _this.animate = function () {\n      // -----Step 3--------\n      //Rotate Models\n      if (_this.cube) _this.cube.rotation.y += 0.01;\n      if (_this.freedomMesh) _this.freedomMesh.rotation.y += 0.01;\n\n      _this.renderScene();\n\n      _this.frameId = window.requestAnimationFrame(_this.animate);\n    };\n\n    _this.renderScene = function () {\n      if (_this.renderer) _this.renderer.render(_this.scene, _this.camera);\n    };\n\n    return _this;\n  }\n\n  _createClass(ThreeScene, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var width = this.mount.clientWidth;\n      var height = this.mount.clientHeight;\n      this.scene = new THREE.Scene(); //Add Renderer\n\n      this.renderer = new THREE.WebGLRenderer({\n        antialias: true\n      });\n      this.renderer.setClearColor(\"#263238\");\n      this.renderer.setSize(width, height);\n      this.mount.appendChild(this.renderer.domElement); //add Camera\n\n      this.camera = new THREE.PerspectiveCamera(75, width / height, 0.1, 1000);\n      this.camera.position.z = 20;\n      this.camera.position.y = 5; //Camera Controls\n\n      var controls = new OrbitControls(this.camera, this.renderer.domElement); //LIGHTS\n\n      var lights = [];\n      lights[0] = new THREE.PointLight(0x304ffe, 1, 0);\n      lights[1] = new THREE.PointLight(0xffffff, 1, 0);\n      lights[2] = new THREE.PointLight(0xffffff, 1, 0);\n      lights[0].position.set(0, 200, 0);\n      lights[1].position.set(100, 200, 100);\n      lights[2].position.set(-100, -200, -100);\n      this.scene.add(lights[0]);\n      this.scene.add(lights[1]);\n      this.scene.add(lights[2]); //Simple Box with WireFrame\n\n      this.addModels();\n      this.renderScene(); //start animation\n\n      this.start();\n    }\n  }, {\n    key: \"addModels\",\n    value: function addModels() {\n      var _this2 = this;\n\n      // -----Step 1--------\n      var geometry = new THREE.BoxGeometry(5, 5, 5);\n      var material = new THREE.MeshBasicMaterial({\n        color: \"\"\n      });\n      this.cube = new THREE.Mesh(geometry, material);\n      this.scene.add(this.cube); // -----Step 2--------\n      //LOAD TEXTURE and on completion apply it on SPHERE\n\n      new THREE.TextureLoader().load(\"https://images.pexels.com/photos/1089438/pexels-photo-1089438.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260\", function (texture) {\n        //Update Texture\n        _this2.cube.material.map = texture;\n        _this2.cube.material.needsUpdate = true;\n      }, function (xhr) {\n        //Download Progress\n        console.log(xhr.loaded / xhr.total * 100 + \"% loaded\");\n      }, function (error) {\n        //Error CallBack\n        console.log(\"An error happened\" + error);\n      }); // -----Step 4--------\n      //Loading 3d Models\n      //Loading Material First\n\n      var mtlLoader = new MTLLoader();\n      mtlLoader.setBaseUrl(\"./assets/\");\n      mtlLoader.load(\"freedom.mtl\", function (materials) {\n        materials.preload();\n        console.log(\"Material loaded\"); //Load Object Now and Set Material\n\n        var objLoader = new OBJLoader();\n        objLoader.setMaterials(materials);\n        objLoader.load(\"./assets/freedom.obj\", function (object) {\n          _this2.freedomMesh = object;\n\n          _this2.freedomMesh.position.setY(3); //or  this\n\n\n          _this2.freedomMesh.scale.set(0.02, 0.02, 0.02);\n\n          _this2.scene.add(_this2.freedomMesh);\n        }, function (xhr) {\n          console.log(xhr.loaded / xhr.total * 100 + \"% loaded\");\n        }, // called when loading has errors\n        function (error) {\n          console.log(\"An error happened\" + error);\n        });\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.stop();\n      this.mount.removeChild(this.renderer.domElement);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          width: \"800px\",\n          height: \"800px\"\n        },\n        ref: function ref(mount) {\n          _this3.mount = mount;\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 7\n        }\n      });\n    }\n  }]);\n\n  return ThreeScene;\n}(Component);\n\nexport default ThreeScene;","map":{"version":3,"sources":["/home/syvolia/Documents/reactthreejs/src/ThreeScene.js"],"names":["React","Component","THREE","MTLLoader","OBJLoader","OrbitControls","ThreeScene","start","frameId","requestAnimationFrame","animate","stop","cancelAnimationFrame","cube","rotation","y","freedomMesh","renderScene","window","renderer","render","scene","camera","width","mount","clientWidth","height","clientHeight","Scene","WebGLRenderer","antialias","setClearColor","setSize","appendChild","domElement","PerspectiveCamera","position","z","controls","lights","PointLight","set","add","addModels","geometry","BoxGeometry","material","MeshBasicMaterial","color","Mesh","TextureLoader","load","texture","map","needsUpdate","xhr","console","log","loaded","total","error","mtlLoader","setBaseUrl","materials","preload","objLoader","setMaterials","object","setY","scale","removeChild"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport * as THREE from \"three\";\nimport { MTLLoader, OBJLoader } from \"three-obj-mtl-loader\";\nimport OrbitControls from \"three-orbitcontrols\";\n\nclass ThreeScene extends Component {\n  componentDidMount() {\n    const width = this.mount.clientWidth;\n    const height = this.mount.clientHeight;\n    this.scene = new THREE.Scene();\n\n    //Add Renderer\n    this.renderer = new THREE.WebGLRenderer({ antialias: true });\n    this.renderer.setClearColor(\"#263238\");\n    this.renderer.setSize(width, height);\n    this.mount.appendChild(this.renderer.domElement);\n\n    //add Camera\n    this.camera = new THREE.PerspectiveCamera(75, width / height, 0.1, 1000);\n    this.camera.position.z = 20;\n    this.camera.position.y = 5;\n\n    //Camera Controls\n    const controls = new OrbitControls(this.camera, this.renderer.domElement);\n\n    //LIGHTS\n    var lights = [];\n    lights[0] = new THREE.PointLight(0x304ffe, 1, 0);\n    lights[1] = new THREE.PointLight(0xffffff, 1, 0);\n    lights[2] = new THREE.PointLight(0xffffff, 1, 0);\n    lights[0].position.set(0, 200, 0);\n    lights[1].position.set(100, 200, 100);\n    lights[2].position.set(-100, -200, -100);\n    this.scene.add(lights[0]);\n    this.scene.add(lights[1]);\n    this.scene.add(lights[2]);\n\n    //Simple Box with WireFrame\n    this.addModels();\n\n    this.renderScene();\n    //start animation\n    this.start();\n  }\n\n  addModels() {\n    // -----Step 1--------\n    const geometry = new THREE.BoxGeometry(5, 5, 5);\n    const material = new THREE.MeshBasicMaterial({\n      color: \"\"\n    });\n    this.cube = new THREE.Mesh(geometry, material);\n    this.scene.add(this.cube);\n\n    // -----Step 2--------\n    //LOAD TEXTURE and on completion apply it on SPHERE\n    new THREE.TextureLoader().load(\n      \"https://images.pexels.com/photos/1089438/pexels-photo-1089438.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260\",\n      texture => {\n        //Update Texture\n        this.cube.material.map = texture;\n        this.cube.material.needsUpdate = true;\n      },\n      xhr => {\n        //Download Progress\n        console.log((xhr.loaded / xhr.total) * 100 + \"% loaded\");\n      },\n      error => {\n        //Error CallBack\n        console.log(\"An error happened\" + error);\n      }\n    );\n\n    // -----Step 4--------\n    //Loading 3d Models\n    //Loading Material First\n    var mtlLoader = new MTLLoader();\n    mtlLoader.setBaseUrl(\"./assets/\");\n    mtlLoader.load(\"freedom.mtl\", materials => {\n      materials.preload();\n      console.log(\"Material loaded\");\n      //Load Object Now and Set Material\n      var objLoader = new OBJLoader();\n      objLoader.setMaterials(materials);\n      objLoader.load(\n        \"./assets/freedom.obj\",\n        object => {\n          this.freedomMesh = object;\n          this.freedomMesh.position.setY(3); //or  this\n          this.freedomMesh.scale.set(0.02, 0.02, 0.02);\n          this.scene.add(this.freedomMesh);\n        },\n        xhr => {\n          console.log((xhr.loaded / xhr.total) * 100 + \"% loaded\");\n        },\n        // called when loading has errors\n        error => {\n          console.log(\"An error happened\" + error);\n        }\n      );\n    });\n  }\n\n  componentWillUnmount() {\n    this.stop();\n    this.mount.removeChild(this.renderer.domElement);\n  }\n  start = () => {\n    if (!this.frameId) {\n      this.frameId = requestAnimationFrame(this.animate);\n    }\n  };\n  stop = () => {\n    cancelAnimationFrame(this.frameId);\n  };\n  animate = () => {\n    // -----Step 3--------\n    //Rotate Models\n    if (this.cube) this.cube.rotation.y += 0.01;\n    if (this.freedomMesh) this.freedomMesh.rotation.y += 0.01;\n\n    this.renderScene();\n    this.frameId = window.requestAnimationFrame(this.animate);\n  };\n  renderScene = () => {\n    if (this.renderer) this.renderer.render(this.scene, this.camera);\n  };\n\n  render() {\n    return (\n      <div\n        style={{ width: \"800px\", height: \"800px\" }}\n        ref={mount => {\n          this.mount = mount;\n        }}\n      />\n    );\n  }\n}\nexport default ThreeScene;\n"]},"metadata":{},"sourceType":"module"}